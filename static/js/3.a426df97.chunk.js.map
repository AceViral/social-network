{"version":3,"sources":["hoc/AuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/common/Preloader/FormsControls/formsControl.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsСontainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHoooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","className","s","item","src","frame","text","alt","likesCount","AddPostForm","validate","yup","post","required","initialValues","validateOnBlur","validationSchema","handleBlur","handleSubmit","onSubmit","component","placeholder","name","onBlur","onChange","onPostChange","value","newPostText","type","onClick","onAddPost","MyPosts","postsElements","posts","map","message","postsBlock","e","updateNewPostText","target","addPost","MyPostsContainer","profilePage","ProfileStatusWithHoooks","useState","editMode","setEditMode","status","setStatus","useEffect","toggleEditMode","updateStatus","autoFocus","onDoubleClick","ProfileInfo","profile","descriptionBlock","photos","large","style","width","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","facebook","website","vk","twitter","instagram","youtube","github","Preloader","Profile","ProfileContainer","match","params","userId","history","push","getProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.a426df97.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n   isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n   class RedirectComponent extends React.Component {\r\n      render() {\r\n         if (!this.props.isAuth) return <Redirect to={\"/login\"} />;\r\n         return <Component {...this.props} />;\r\n      }\r\n   }\r\n\r\n   let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n      RedirectComponent\r\n   );\r\n   return ConnectedAuthRedirectComponent;\r\n};\r\n\r\nexport default withAuthRedirect;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2SLe3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1Ii1c\",\"error\":\"MyPosts_error__xVXuO\",\"errorText\":\"MyPosts_errorText__1ITXj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item___FhjT\",\"frame\":\"Post_frame__32kfQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"formsControl_formControl__BlZfS\",\"error\":\"formsControl_error__6ygou\"};","import s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://cdn-icons-png.flaticon.com/512/236/236832.png\" />\r\n      <div className={s.frame}>\r\n        <p>{props.text}</p>\r\n      </div>\r\n      <h6>\r\n        <img\r\n          src=\"https://cdn-icons.flaticon.com/png/512/880/premium/880452.png?token=exp=1634474564~hmac=90221513cf36b1d73cf87ccf2d86bb47\"\r\n          alt=\"\"\r\n        />\r\n        {props.likesCount}\r\n      </h6>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import { Formik, Field, Form } from \"formik\";\r\nimport React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { Textarea } from \"../../common/Preloader/FormsControls/formsControl\";\r\nimport * as yup from \"yup\";\r\n\r\nconst MyPosts = (props) => {\r\n   let postsElements = props.posts.map((post) => (\r\n      <Post text={post.message} likesCount={post.likesCount} />\r\n   ));\r\n\r\n   let onAddPost = () => {\r\n      props.addPost();\r\n   };\r\n\r\n   let onPostChange = (e) => {\r\n      props.updateNewPostText(e.target.value);\r\n   };\r\n   return (\r\n      <div className={s.postsBlock}>\r\n         <AddPostForm\r\n            onPostChange={onPostChange}\r\n            newPostText={props.newPostText}\r\n            onAddPost={onAddPost}\r\n         />\r\n         <div className={s.posts}>{postsElements}</div>\r\n      </div>\r\n   );\r\n};\r\n\r\nfunction AddPostForm(props) {\r\n   const validate = yup.object({ post: yup.string().required(\"Обязательно\") });\r\n   return (\r\n      <Formik\r\n         initialValues={{ post: \"\" }}\r\n         validateOnBlur\r\n         validationSchema={validate}\r\n      >\r\n         {({ handleBlur, handleSubmit }) => (\r\n            <Form onSubmit={handleSubmit}>\r\n               <div>\r\n                  <Field\r\n                     component=\"textarea\"\r\n                     placeholder={\"Post\"}\r\n                     name={\"post\"}\r\n                     onBlur={handleBlur}\r\n                     onChange={props.onPostChange}\r\n                     value={props.newPostText}\r\n                  />\r\n               </div>\r\n               <button type=\"submit\" onClick={props.onAddPost}>\r\n                  Add post\r\n               </button>\r\n            </Form>\r\n         )}\r\n      </Formik>\r\n   );\r\n}\r\n\r\nexport default MyPosts;\r\n","import { connect } from \"react-redux\";\r\nimport { addPost, updateNewPostText } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      posts: state.profilePage.posts,\r\n      newPostText: state.profilePage.newPostText,\r\n   };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {\r\n   updateNewPostText,\r\n   addPost,\r\n})(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n   state = {\r\n      editMode: false,\r\n      status: this.props.status,\r\n   };\r\n   toggleEditMode = () => {\r\n      this.setState({\r\n         editMode: !this.state.editMode,\r\n      });\r\n      this.props.updateStatus(this.state.status);\r\n   };\r\n   onStatusChange = (e) => {\r\n      this.setState({ status: e.target.value });\r\n   };\r\n   componentDidUpdate(prevProps, prevState) {\r\n      if (prevProps.status !== this.props.status) {\r\n         this.setState({ status: this.props.status });\r\n      }\r\n   }\r\n   render() {\r\n      return (\r\n         <div>\r\n            {this.state.editMode ? (\r\n               <div>\r\n                  <input\r\n                     onChange={this.onStatusChange}\r\n                     autoFocus={true}\r\n                     value={this.state.status}\r\n                     onBlur={this.toggleEditMode}\r\n                  />\r\n               </div>\r\n            ) : (\r\n               <div>\r\n                  <span onDoubleClick={this.toggleEditMode}>\r\n                     {this.state.status || \"NO STATUS\"}\r\n                  </span>\r\n               </div>\r\n            )}\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default ProfileStatus;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst ProfileStatusWithHoooks = (props) => {\r\n   let [editMode, setEditMode] = useState(false);\r\n   let [status, setStatus] = useState(props.status);\r\n   useEffect(() => {\r\n      setStatus(props.status);\r\n   }, [props.status]);\r\n   const toggleEditMode = () => {\r\n      setEditMode(!editMode);\r\n      props.updateStatus(status);\r\n   };\r\n   const onStatusChange = (e) => {\r\n      setStatus(e.target.value);\r\n   };\r\n   return (\r\n      <div>\r\n         {editMode ? (\r\n            <div>\r\n               <input\r\n                  onChange={onStatusChange}\r\n                  autoFocus={true}\r\n                  value={status}\r\n                  onBlur={toggleEditMode}\r\n               />\r\n            </div>\r\n         ) : (\r\n            <div>\r\n               <span onDoubleClick={toggleEditMode}>\r\n                  {status || \"NO STATUS\"}\r\n               </span>\r\n            </div>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default ProfileStatusWithHoooks;\r\n","import s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHoooks from \"./ProfileStatusWithHoooks\";\r\nconst ProfileInfo = (props) => {\r\n   if (!props.profile) {\r\n      return <Preloader />;\r\n   }\r\n   return (\r\n      <div>\r\n         <div className={s.descriptionBlock}>\r\n            <img\r\n               src={props.profile.photos.large}\r\n               alt=\"\"\r\n               style={{ width: \"200px\" }}\r\n            />\r\n            <ProfileStatusWithHoooks\r\n               status={props.status}\r\n               updateStatus={props.updateStatus}\r\n            />\r\n            {/* <ProfileStatus\r\n               status={props.status}\r\n               updateStatus={props.updateStatus}\r\n            /> */}\r\n\r\n            <h3>Мое полное имя: {props.profile.fullName}</h3>\r\n            <p>Обо мне: {props.profile.aboutMe}</p>\r\n            <p>\r\n               Ищу ли я работу?{\" \"}\r\n               {props.profile.lookingForAJob ? (\r\n                  <p>Да я ищу работу</p>\r\n               ) : (\r\n                  <p>Нет я не ищу работу</p>\r\n               )}\r\n            </p>\r\n            <p>\r\n               Что я делаю для этого? {props.profile.lookingForAJobDescription}\r\n            </p>\r\n            <h4>Мои контакты:</h4>\r\n            <p>FaceBook: {props.profile.contacts.facebook}</p>\r\n            <p>Мой сайт: {props.profile.contacts.website}</p>\r\n            <p>VK: {props.profile.contacts.vk}</p>\r\n            <p>Twitter: {props.profile.contacts.twitter}</p>\r\n            <p>Instagram: {props.profile.contacts.instagram}</p>\r\n            <p>Youtube: {props.profile.contacts.youtube}</p>\r\n            <p>GitHub: {props.profile.contacts.github}</p>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import MyPostsContainer from \"./MyPosts/MyPostsСontainer\";\r\nimport s from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n   return (\r\n      <div className={s.profile}>\r\n         <ProfileInfo\r\n            profile={props.profile}\r\n            status={props.status}\r\n            updateStatus={props.updateStatus}\r\n         />\r\n         <MyPostsContainer />\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n   getProfile,\r\n   getStatus,\r\n   updateStatus,\r\n} from \"../../redux/profile-reducer\";\r\nimport { withRouter } from \"react-router\";\r\nimport { withAuthRedirect } from \"../../hoc/AuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n   componentDidMount() {\r\n      if (this.props.match.params.userId) {\r\n         this.props.history.push(\"/login\");\r\n      }\r\n      this.props.getProfile(this.props.match.params.userId);\r\n      this.props.getStatus(this.props.match.params.userId);\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div>\r\n            <Profile\r\n               {...this.props}\r\n               profile={this.props.profile}\r\n               status={this.props.status}\r\n               updateStatus={this.props.updateStatus}\r\n            />\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n   profile: state.profilePage.profile,\r\n   status: state.profilePage.status,\r\n});\r\nexport default compose(\r\n   connect(mapStateToProps, { getProfile, getStatus, updateStatus }),\r\n   withRouter,\r\n   withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}