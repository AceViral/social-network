{"version":3,"sources":["hoc/AuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","className","s","dialog","src","id","activeClassName","active","name","Message","message","text","AddMessageForm","yup","initialValues","component","placeholder","onChange","onNewMessageChange","value","newMessageBody","onClick","onSendMessageClick","type","Dialogs","dialogsPage","dialogsElements","dialogs","map","messagesElements","messages","dialogsItems","e","body","target","updateNewMessageBody","onSendMessage","compose"],"mappings":"6MAIIA,EAA6B,SAACC,GAAD,MAAY,CAC1CC,OAAQD,EAAME,KAAKD,SAGTE,EAAmB,SAACC,GAAe,IACvCC,EADsC,4JAEzC,WACG,OAAKC,KAAKC,MAAMN,OACT,cAACG,EAAD,eAAeE,KAAKC,QADI,cAAC,IAAD,CAAUC,GAAI,eAHP,GACZC,IAAML,WAUtC,OAHqCM,YAAQX,EAARW,CAClCL,K,oBChBNM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,6GCapMC,EAXI,SAACN,GAClB,OACE,sBAAKO,UAAWC,IAAEC,OAAlB,UACE,qBAAKC,IAAI,0DACT,cAAC,IAAD,CAAST,GAAI,YAAcD,EAAMW,GAAIC,gBAAiBJ,IAAEK,OAAxD,SACGb,EAAMc,WCEAC,EARC,SAACf,GACf,OACE,qBAAKO,UAAWC,IAAEQ,QAAlB,SACE,4BAAIhB,EAAMiB,U,uBCwCVC,EAAiB,SAAClB,GACJmB,IAAW,IAC5B,OACG,cAAC,IAAD,CAAQC,cAAe,CAAEJ,QAAS,IAAlC,SACG,eAAC,IAAD,WACG,8BACG,cAAC,IAAD,CACGK,UAAU,WACVC,YAAY,qBACZC,SAAUvB,EAAMwB,mBAChBC,MAAOzB,EAAM0B,eACbZ,KAAM,cAGZ,8BACG,wBAAQa,QAAS3B,EAAM4B,mBAAoBC,KAAK,SAAhD,0BASAC,EA7DC,SAAC9B,GACd,IAAIP,EAAQO,EAAM+B,YAEdC,EAAkBvC,EAAMwC,QAAQC,KAAI,SAACzB,GAAD,OACrC,cAAC,EAAD,CAAYK,KAAML,EAAOK,KAAsBH,GAAIF,EAAOE,IAAtBF,EAAOE,OAE1CwB,EAAmB1C,EAAM2C,SAASF,KAAI,SAAClB,GAAD,OACvC,cAAC,EAAD,CAASC,KAAMD,EAAQA,QAA0BL,GAAIK,EAAQL,IAAxBK,EAAQL,OAG5Ce,EAAiBjC,EAAMiC,eAU3B,OAAK1B,EAAMN,OAGR,sBAAKa,UAAWC,IAAEyB,QAAlB,UACG,qBAAK1B,UAAWC,IAAE6B,aAAlB,SAAiCL,IACjC,sBAAKzB,UAAWC,IAAE4B,SAAlB,UACG,8BAAMD,IACN,cAAC,EAAD,CACGX,mBAba,SAACc,GACvB,IAAIC,EAAOD,EAAEE,OAAOf,MACpBzB,EAAMyC,qBAAqBF,IAYlBb,eAAgBA,EAChBE,mBAlBa,WACtB5B,EAAM0C,yBAOiB,cAAC,IAAD,CAAUzC,GAAI,Y,QCb5B0C,sBACZxC,aAPmB,SAACV,GACpB,MAAO,CACJsC,YAAatC,EAAMsC,eAKG,CAAEU,yBAAsBC,oBACjD9C,IAFY+C,CAGbb","file":"static/js/4.fdb97a35.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n   isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n   class RedirectComponent extends React.Component {\r\n      render() {\r\n         if (!this.props.isAuth) return <Redirect to={\"/login\"} />;\r\n         return <Component {...this.props} />;\r\n      }\r\n   }\r\n\r\n   let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n      RedirectComponent\r\n   );\r\n   return ConnectedAuthRedirectComponent;\r\n};\r\n\r\nexport default withAuthRedirect;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2fdpM\",\"dialogsItems\":\"Dialogs_dialogsItems__1QNO1\",\"dialog\":\"Dialogs_dialog__3HGtT\",\"active\":\"Dialogs_active__3lXpI\",\"messages\":\"Dialogs_messages__1N_NA\",\"message\":\"Dialogs_message__1FgKx\"};","import s from \"../Dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  return (\r\n    <div className={s.dialog}>\r\n      <img src=\"https://cdn-icons-png.flaticon.com/512/236/236832.png\" />\r\n      <NavLink to={\"/dialogs/\" + props.id} activeClassName={s.active}>\r\n        {props.name}\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import s from \"../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={s.message}>\r\n      <p>{props.text}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import s from \"./Dialogs.module.css\";\r\nimport React from \"react\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Redirect } from \"react-router\";\r\nimport { Form, Formik, Field } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nconst Dialogs = (props) => {\r\n   let state = props.dialogsPage;\r\n\r\n   let dialogsElements = state.dialogs.map((dialog) => (\r\n      <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />\r\n   ));\r\n   let messagesElements = state.messages.map((message) => (\r\n      <Message text={message.message} key={message.id} id={message.id} />\r\n   ));\r\n\r\n   let newMessageBody = state.newMessageBody;\r\n\r\n   let onSendMessageClick = () => {\r\n      props.onSendMessage();\r\n   };\r\n   let onNewMessageChange = (e) => {\r\n      let body = e.target.value;\r\n      props.updateNewMessageBody(body);\r\n   };\r\n\r\n   if (!props.isAuth) return <Redirect to={\"/login\"} />;\r\n\r\n   return (\r\n      <div className={s.dialogs}>\r\n         <div className={s.dialogsItems}>{dialogsElements}</div>\r\n         <div className={s.messages}>\r\n            <div>{messagesElements}</div>\r\n            <AddMessageForm\r\n               onNewMessageChange={onNewMessageChange}\r\n               newMessageBody={newMessageBody}\r\n               onSendMessageClick={onSendMessageClick}\r\n            />\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nconst AddMessageForm = (props) => {\r\n   const validate = yup.object({});\r\n   return (\r\n      <Formik initialValues={{ message: \"\" }}>\r\n         <Form>\r\n            <div>\r\n               <Field\r\n                  component=\"textarea\"\r\n                  placeholder=\"Enter your message\"\r\n                  onChange={props.onNewMessageChange}\r\n                  value={props.newMessageBody}\r\n                  name={\"message\"}\r\n               ></Field>\r\n            </div>\r\n            <div>\r\n               <button onClick={props.onSendMessageClick} type=\"submit\">\r\n                  Send\r\n               </button>\r\n            </div>\r\n         </Form>\r\n      </Formik>\r\n   );\r\n};\r\n\r\nexport default Dialogs;\r\n","import {\r\n   onSendMessage,\r\n   updateNewMessageBody,\r\n} from \"../../redux/dialogs-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/AuthRedirect\";\r\nimport Dialogs from \"../Dialogs/Dialogs\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      dialogsPage: state.dialogsPage,\r\n   };\r\n};\r\n\r\nexport default compose(\r\n   connect(mapStateToProps, { updateNewMessageBody, onSendMessage }),\r\n   withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}